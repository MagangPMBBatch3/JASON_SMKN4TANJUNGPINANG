type UserProfile {
    id: ID!
    user_id: ID!
    nama_lengkap: ID!
    nrp: String
    alamat: String
    foto: String
    bagian_id: Int
    level_id: Int
    status_id: Int
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime

    user: User @belongsTo
    bagian: Bagian @belongsTo
    level: Level @belongsTo
    status: Status @belongsTo
}

input CreateUserProfileInput {
    user_id: ID!
    nama_lengkap: String!
    nrp: String
    alamat: String
    foto: String
    bagian_id: Int
    level_id: Int
    status_id: Int
}

extend type Query
{
    allUserProfiles: [UserProfile!]!
    @all(model: "App\\Models\\UserProfile\\UserProfile")

    UserProfile(id: ID! @eq): UserProfile
    @find(model: "App\\Models\\UserProfile\\UserProfile")
}

extend type Mutation {
    CreateUserProfileInput(input: CreateUserProfileInput! @spread): UserProfile
    @create(model: "App\\Models\\UserProfile\\UserProfile")

    UpdateUserProfile(id: ID! @eq, input: UpdateUserProfile! @spread): UserProfile
    @update(model: "App\\Models\\UserProfile\\UserProfile")

    deleteUserProfile(id: ID! @eq): UserProfile
    @delete(model: "App\\Models\\UserProfile\\UserProfile\\")

    restoreUserProfile(id: ID!): UserProfile
    @field(resolver: "App\\GraphQL\\UserProfile\\Mutations\\UserProfileMutation@restore")

    forceDeleteUserProfile(id: ID!): UserProfile
    @field(resolver: "App\\GraphQL\\UserProfile\\Mutations\\UserProfileMutation@forceDelete")
}
